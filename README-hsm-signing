# first generate secure boot keys as usual

# setup your password in HSM but take care its not more than 32 chars long...

# in keys dir of generator testkeys, generate these keys needed for YubiHSM
openssl rsa -in IMG1_1_sha256_4096_65537_v3_usr_key.der -out IMG1_1_key.der
openssl rsa -in CSF1_1_sha256_4096_65537_v3_usr_key.der -out CSF1_1_key.der

# now in the parent directory of keys, setup  environment, delete existing keys, and now program YubiHSM
export USR_PIN='0001password'
export IMG1_KEY=IMG1_1_sha256_4096_usr
export CSF1_KEY=CSF1_1_sha256_4096_usr
export PKCS11_MODULE=/usr/lib/x86_64-linux-gnu/p11-kit-proxy.so
pkcs11-tool --module $PKCS11_MODULE  --pin $USR_PIN --delete-object --type cert --id 1002
pkcs11-tool --module $PKCS11_MODULE  --pin $USR_PIN --delete-object --type cert --id 1003
pkcs11-tool --module $PKCS11_MODULE -l --write-object keys/CSF1_1_key.der --type privkey --usage-sign --label $CSF1_KEY --id 1002 --pin $USR_PIN
pkcs11-tool --module $PKCS11_MODULE -l --write-object keys/IMG1_1_key.der --type privkey --usage-sign --label $IMG1_KEY --id 1003 --pin $USR_PIN
pkcs11-tool --module $PKCS11_MODULE -l --write-object crts/CSF1_1_sha256_4096_65537_v3_usr_crt.der --type cert --label $CSF1_KEY --id 1002 --pin $USR_PIN
pkcs11-tool --module $PKCS11_MODULE -l --write-object crts/IMG1_1_sha256_4096_65537_v3_usr_crt.der --type cert --label $IMG1_KEY --id 1003 --pin $USR_PIN
